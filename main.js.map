{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/comentarios/comentarios.component.ts","./src/app/componentes/comentarios/comentarios.component.html","./src/app/componentes/home/home.component.ts","./src/app/componentes/home/home.component.html","./src/app/componentes/post/post.component.ts","./src/app/componentes/post/post.component.html","./src/app/componentes/usuario/usuario.component.ts","./src/app/componentes/usuario/usuario.component.html","./src/app/componentes/usuarios/usuarios.component.ts","./src/app/componentes/usuarios/usuarios.component.html","./src/app/services/comentarios.service.ts","./src/app/services/post.service.ts","./src/app/services/usuarios.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\nimport { UsuarioComponent } from './componentes/usuario/usuario.component';\nimport { PostComponent } from './componentes/post/post.component';\nimport { ComentariosComponent } from './componentes/comentarios/comentarios.component';\n\nconst APP_ROUTES: Routes = [\n  {path: '', component: HomeComponent },\n  {path: 'usuarios', component: UsuariosComponent },\n  {path: 'usuarios/:id', component: UsuarioComponent },\n  {path: 'comentarios', component: ComentariosComponent },\n  {path: 'posts', component: PostComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES)],\n  exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule  {\n\n }\n","import { Component } from '@angular/core';\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'exercicio2';\n}\n","<header>\r\n    <img class=\"img-responsive\" src=\"assets/banner.jpg\">\r\n</header>\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsuariosComponent } from './componentes/usuarios/usuarios.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { UsuarioComponent } from './componentes/usuario/usuario.component';\nimport { ComentariosComponent } from './componentes/comentarios/comentarios.component';\nimport { PostComponent } from './componentes/post/post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsuariosComponent,\n    HomeComponent,\n    UsuarioComponent,\n    ComentariosComponent,\n    PostComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ComentariosService} from '../../services/comentarios.service'\n@Component({\n  selector: 'app-comentarios',\n  templateUrl: './comentarios.component.html',\n  styleUrls: ['./comentarios.component.css']\n})\nexport class ComentariosComponent implements OnInit {\n\n  comentarios: any;\n  constructor(comentariosServ: ComentariosService) { \n    comentariosServ.getTodos().subscribe(comentarios => {\n      this.comentarios = comentarios;\n      console.log(comentarios);\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n\n    <h1>API Typicode</h1>\n    \n    <h2>Lista de Comentarios</h2>\n    \n    <section>\n    <div *ngFor=\"let comentario of comentarios\">\n        <b>ID: </b>{{ comentario.postId }}<br>\n        <b>Nome: </b>{{ comentario.name }}<br>\n        <b>Email: </b>{{ comentario.email }}<br>\n        <b>Menssagem: </b>{{ comentario.body}}<br>\n        <hr>\n    </div>\n    </section>\n    </body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n<section>\n    <h1>Seja Bem-vindo</h1>\n    <p>Vamos conhecer mais um pouco sobre a API de Typicode</p>\n    <ul>\n          <li><a href=\"/usuarios\">Lista de Usuarios</a>  </li>    \n         <li><a href=\"/comentarios\">Lista de Comentarios</a>    </li>  \n         <li><a href=\"/posts\">Lista de Posts</a>    </li> \n      </ul>\n</section>\n</body>","import { Component, OnInit } from '@angular/core';\nimport {PostService} from '../../services/post.service'\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  posts: any;\n  constructor(postsServ: PostService) { \n    postsServ.getTodos().subscribe(post => {\n      this.posts = post;\n      console.log(post);\n    });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n\n    <h1>API Typicode</h1>\n    \n    <h2>Lista de Posts</h2>\n    \n    <section>\n    <div *ngFor=\"let post of posts\">\n        <b>ID: </b>{{ post.id }}<br>\n        <b>Título: </b>{{ post.title }}<br>\n        <b>Menssagem: </b>{{ post.body}}<br>\n        <hr>\n    </div>\n    </section>\n    </body>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\nimport {UsuariosService} from '../../services/usuarios.service'\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\n\nexport class UsuarioComponent implements OnInit {\n\n  id: number;\n  usuario: any;\n  constructor(private route: ActivatedRoute, private usuariosServ: UsuariosService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id']\n\n      this.usuariosServ.getPersonagem(this.id).\n      subscribe(usuario => this.usuario = usuario);\n    });\n  }\n}\n","<body>\n\n    <h1>API Typicode</h1>\n    \n    <h2>Lista de Usuarios</h2>\n    \n    <section>\n    <div>\n        <b>ID: </b>{{ usuario.id }}<br>\n        <b>Nome: </b>{{ usuario.name }}<br>\n        <b>Email: </b>{{ usuario.email }}<br>\n        <b>Endereço: </b>{{ usuario.address.street +', '+ usuario.address.suite +', '+ usuario.address.city }}<br>\n        <hr>\n    </div>\n    </section>\n    </body>\n","import { Component, OnInit } from '@angular/core';\n\nimport {UsuariosService} from '../../services/usuarios.service'\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  usuarios: any;\n  constructor(usuariosServ: UsuariosService) { \n    usuariosServ.getTodos().subscribe(usuarios => {\n      this.usuarios = usuarios;\n      console.log(usuarios);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n\n<h1>API Typicode</h1>\n\n<h2>Lista de Usuarios</h2>\n\n<section>\n<div *ngFor=\"let usuario of usuarios\">\n\t<b>ID: </b>{{ usuario.id }}<br>\n\t<b>Nome: </b>{{ usuario.name }}<br>\n\t<b>Email: </b>{{ usuario.email }}<br>\n\t<b>Endereço: </b>{{ usuario.address.street +', '+ usuario.address.suite +', '+ usuario.address.city }}<br>\n\t<hr>\n</div>\n</section>\n</body>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComentariosService {\n\n  constructor(private http: HttpClient) { }\n\n  getTodos() {\n  \treturn this.http.get('https://jsonplaceholder.typicode.com/comments');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n  getTodos() {\n  \treturn this.http.get('https://jsonplaceholder.typicode.com/posts');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  constructor(private http: HttpClient) { }\n\n  getTodos() {\n  \treturn this.http.get('https://jsonplaceholder.typicode.com/users');\n  }\n\n  getPersonagem(id){\n    return this.http.get('https://jsonplaceholder.typicode.com/users/'+id);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}